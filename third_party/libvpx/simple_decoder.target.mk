# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := simple_decoder
### Generated for rule third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example:
$(obj)/gen/third_party/libvpx/simple_decoder.c: obj := $(abs_obj)
$(obj)/gen/third_party/libvpx/simple_decoder.c: builddir := $(abs_builddir)
$(obj)/gen/third_party/libvpx/simple_decoder.c: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/libvpx/simple_decoder.c: third_party/libvpx/source/libvpx/examples/simple_decoder.txt $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh FORCE_DO_CMD
	$(call do_cmd,third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0)

all_deps += $(obj)/gen/third_party/libvpx/simple_decoder.c
cmd_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/libvpx; mkdir -p $(obj)/gen/third_party/libvpx; bash -c "$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh $(abspath $<) > $(obj)/gen/third_party/libvpx/simple_decoder.c"
quiet_cmd_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 = RULE third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 $@

rule_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs := \
	$(obj)/gen/third_party/libvpx/simple_decoder.c

### Finished generating for rule: third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example

### Finished generating for all rules

### Generated for copy rule.
$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh: third_party/libvpx/source/libvpx/examples/gen_example_code.sh FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh
third_party_libvpx_libvpx_gyp_simple_decoder_target_copies = $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh

DEFS_Debug := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DNO_TCMALLOC' \
	'-DDISABLE_NACL' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DENABLE_WEBRTC=1' \
	'-DUSE_PROPRIETARY_CODECS' \
	'-DENABLE_PEPPER_THREADING' \
	'-DENABLE_GPU=1' \
	'-DUSE_OPENSSL=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DANDROID' \
	'-D__GNU_SOURCE=1' \
	'-DUSE_STLPORT=1' \
	'-D_STLP_USE_PTR_SPECIALIZATIONS=1' \
	'-DCHROME_BUILD_ID=""' \
	'-DHAVE_SYS_UIO_H' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wno-format \
	-mthumb \
	-march=armv7-a \
	-mtune=cortex-a8 \
	-mfloat-abi=softfp \
	-mfpu=vfpv3-d16 \
	-fno-tree-sra \
	-fuse-ld=gold \
	-Wno-psabi \
	-mthumb-interwork \
	-ffunction-sections \
	-funwind-tables \
	-g \
	-fstack-protector \
	-fno-short-enums \
	-finline-limit=64 \
	-Wa,--noexecstack \
	--sysroot=/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm \
	-I/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/stlport/stlport \
	-I/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/gnu-libstdc++/4.6/include \
	-Os \
	-g \
	-fomit-frame-pointer \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated \
	-Wno-abi

INCS_Debug := \
	-Ithird_party/libvpx/source/libvpx

DEFS_Release := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DNO_TCMALLOC' \
	'-DDISABLE_NACL' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DENABLE_WEBRTC=1' \
	'-DUSE_PROPRIETARY_CODECS' \
	'-DENABLE_PEPPER_THREADING' \
	'-DENABLE_GPU=1' \
	'-DUSE_OPENSSL=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DANDROID' \
	'-D__GNU_SOURCE=1' \
	'-DUSE_STLPORT=1' \
	'-D_STLP_USE_PTR_SPECIALIZATIONS=1' \
	'-DCHROME_BUILD_ID=""' \
	'-DHAVE_SYS_UIO_H' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to all source files.
CFLAGS_Release := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wno-format \
	-mthumb \
	-march=armv7-a \
	-mtune=cortex-a8 \
	-mfloat-abi=softfp \
	-mfpu=vfpv3-d16 \
	-fno-tree-sra \
	-fuse-ld=gold \
	-Wno-psabi \
	-mthumb-interwork \
	-ffunction-sections \
	-funwind-tables \
	-g \
	-fstack-protector \
	-fno-short-enums \
	-finline-limit=64 \
	-Wa,--noexecstack \
	--sysroot=/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm \
	-I/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/stlport/stlport \
	-I/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/gnu-libstdc++/4.6/include \
	-Os \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections \
	-fomit-frame-pointer

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated \
	-Wno-abi

INCS_Release := \
	-Ithird_party/libvpx/source/libvpx

OBJS := \
	$(obj).target/$(TARGET)/gen/third_party/libvpx/simple_decoder.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libvpx.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp8.stamp $(builddir)/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/gen_asm_offsets_vpx_scale.stamp $(builddir)/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp9.stamp $(builddir)/libvpx_asm_offsets_vp9.a $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp9.a

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(third_party_libvpx_libvpx_gyp_simple_decoder_target_copies)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(builddir)/simple_decoder: | $(rule_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(third_party_libvpx_libvpx_gyp_simple_decoder_target_copies)

# Preserve order dependency of special output on deps.
$(rule_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(third_party_libvpx_libvpx_gyp_simple_decoder_target_copies): | $(builddir)/libvpx.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp8.stamp $(builddir)/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/gen_asm_offsets_vpx_scale.stamp $(builddir)/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp9.stamp $(builddir)/libvpx_asm_offsets_vp9.a $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp9.a

LDFLAGS_Debug := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,-z,relro \
	-Wl,-z,now \
	-fuse-ld=gold \
	-nostdlib \
	-Wl,--no-undefined \
	-Wl,--exclude-libs=ALL \
	--sysroot=/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm \
	-Wl,--icf=safe \
	-L/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/stlport/libs/armeabi-v7a \
	-L/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a \
	-Bdynamic \
	-Wl,-dynamic-linker,/system/bin/linker \
	-Wl,--gc-sections \
	-Wl,-z,nocopyreloc \
	/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm/usr/lib/crtbegin_dynamic.o \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LDFLAGS_Release := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,-z,relro \
	-Wl,-z,now \
	-fuse-ld=gold \
	-nostdlib \
	-Wl,--no-undefined \
	-Wl,--exclude-libs=ALL \
	--sysroot=/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm \
	-Wl,--icf=safe \
	-L/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/stlport/libs/armeabi-v7a \
	-L/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a \
	-Bdynamic \
	-Wl,-dynamic-linker,/system/bin/linker \
	-Wl,--gc-sections \
	-Wl,-z,nocopyreloc \
	/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm/usr/lib/crtbegin_dynamic.o \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LIBS := \
	 \
	-lstlport_static \
	/home/ubuntu/workspace/trunk/third_party/android_tools/ndk/toolchains/arm-linux-androideabi-4.6/prebuilt/linux-i686/bin/../lib/gcc/arm-linux-androideabi/4.6.x-google/libgcc.a \
	-lc \
	-ldl \
	-lstdc++ \
	-lm \
	/home/ubuntu/workspace/trunk/third_party/android_tools/ndk//platforms/android-9/arch-arm/usr/lib/crtend_android.o

$(builddir)/simple_decoder: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/simple_decoder: LIBS := $(LIBS)
$(builddir)/simple_decoder: LD_INPUTS := $(OBJS) $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp9.a
$(builddir)/simple_decoder: TOOLSET := $(TOOLSET)
$(builddir)/simple_decoder: $(OBJS) $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vpx_scale.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp9.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/simple_decoder
# Add target alias
.PHONY: simple_decoder
simple_decoder: $(builddir)/simple_decoder

